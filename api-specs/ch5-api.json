{
  "openapi": "3.0.0",
  "info": {
    "title": "Be interview API",
    "description": "This is an API to query available products and discounts in the DB and place orders",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/FRANCESCAGIAMMICHELE/first/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/FRANCESCAGIAMMICHELE/challenge1/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/api/products": {
      "get": {
        "summary": "searches products",
        "description": "By passing in the appropriate options, you can search for\nthe products in the system\n",
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "category of the item",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search criteria",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Products"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "send client's order",
        "description": "By sending the order details and credit car number, you can retrieve the information about the success or failure of the order",
        "requestBody": {
          "description": "Order request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "order posted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "payment required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/discounts": {
      "get": {
        "summary": "searches discounts",
        "description": "By passing in the appropriate options, you can search for\nthe discounts in the system\n",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "search active discounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list discounts matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discounts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Products": {
        "required": [
          "products",
          "total",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/ProductItems"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 666
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "example": 11
          }
        }
      },
      "ProductItems": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProductItem"
        }
      },
      "ProductItem": {
        "required": [
          "availableQuantity",
          "category",
          "id",
          "imageUrl",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 11
          },
          "name": {
            "type": "string",
            "example": "Watermelon"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://via.placeholder.com/150?text=Product+11"
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 66.6
          },
          "availableQuantity": {
            "type": "integer",
            "format": "int32",
            "example": 17
          },
          "category": {
            "type": "string",
            "example": "Fruit"
          },
          "specialBonus": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "default": 1
          }
        }
      },
      "Order": {
        "required": [
          "address",
          "cart",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "baker street,21 - 21021 London - UK"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "creditCard",
              "paypal",
              "bankTransfer"
            ]
          },
          "usePoints": {
            "type": "boolean",
            "default": false
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "if": {
            "$ref": "#/components/schemas/Order_if"
          },
          "then": {
            "$ref": "#/components/schemas/Order_then"
          }
        }
      },
      "Cart": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CartItem"
        }
      },
      "CartItem": {
        "required": [
          "product",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "product": {
            "$ref": "#/components/schemas/ProductItem"
          }
        }
      },
      "CreditCard": {
        "required": [
          "cardNumber",
          "cvv",
          "expiryMonth",
          "expiryYear"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "pattern": "^[0-9]{16}$",
            "type": "string",
            "description": "Property must be exactly 16 digits long.",
            "example": "4141414141414141"
          },
          "expiryMonth": {
            "pattern": "^(0[1-9]|1[0-2])$",
            "type": "string",
            "description": "Property must be exactly 2 digits between 01 and 12.",
            "example": "1"
          },
          "expiryYear": {
            "pattern": "^\\d{4}$",
            "type": "string",
            "description": "Property must be exactly 4 digits.",
            "example": "1977"
          },
          "cvv": {
            "pattern": "^\\d{3}$",
            "type": "string",
            "description": "Property must be exactly 3 digits.",
            "example": "1977"
          }
        }
      },
      "OrderResponse": {
        "required": [
          "amountPaid",
          "orderDetails",
          "payment",
          "totalItems",
          "totalPrice",
          "totalPriceWithDiscounts"
        ],
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "example": 11
          },
          "totalPrice": {
            "type": "number",
            "format": "double",
            "example": 66.6
          },
          "totalPriceWithDiscounts": {
            "type": "number",
            "format": "double",
            "example": 66.6
          },
          "payment": {
            "type": "string",
            "enum": [
              "approved",
              "declined",
              "error"
            ]
          },
          "amountPaid": {
            "type": "number",
            "format": "double",
            "example": 66.6
          },
          "orderDetails": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "OrderErrorResponse": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      },
      "Discounts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DiscountItem"
        }
      },
      "DiscountItem": {
        "required": [
          "percentage",
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "example": 11
          },
          "percentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "example": 50
          }
        }
      },
      "Order_if": {
        "properties": {
          "paymentMethod": {
            "type": "string",
            "enum": [
              "creditCard"
            ]
          }
        }
      },
      "Order_then": {
        "required": [
          "creditCard"
        ],
        "properties": {
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          }
        }
      }
    }
  }
}